<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: osx | Born729]]></title>
  <link href="http://born729.github.com/blog/categories/osx/atom.xml" rel="self"/>
  <link href="http://born729.github.com/"/>
  <updated>2013-06-19T07:59:18+08:00</updated>
  <id>http://born729.github.com/</id>
  <author>
    <name><![CDATA[born729]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[bash on osx]]></title>
    <link href="http://born729.github.com/blog/2012/07/22/bash-on-osx/"/>
    <updated>2012-07-22T00:00:00+08:00</updated>
    <id>http://born729.github.com/blog/2012/07/22/bash-on-osx</id>
    <content type="html"><![CDATA[<p>bash在运行的时候分两种情况，login shell和非login shell。
login shell会执行下列文件：</p>

<ul>
<li>/etc/profile</li>
<li>~/.bash_profile</li>
<li>~/.bash_login(没有.bash_profile的情况下运行)</li>
<li>~/.profile(没有.bash_login的情况下运行)</li>
</ul>


<p>非login shell则是 ~/.bashrc, osx和Linux不一样的是，每次运行Terminal，都是login shell，所以osx下一个常见问题就是.bashrc的设置不起作用，所以，可以在bash_profile下增加这样一行:
<code>
[ -r ~/.bashrc ] &amp;&amp; source ~/.bashrc
</code>
这样，.bashrc中的设置就在osx下也可以起作用了。</p>

<p>顺便，如果切换shell的话，可以用
<code>
sudo chsh -s /bin/zsh username
</code>
临时切换shell，可以用
<code>
exec bash
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[远程执行textmate]]></title>
    <link href="http://born729.github.com/blog/2012/05/22/remote-textmate/"/>
    <updated>2012-05-22T00:00:00+08:00</updated>
    <id>http://born729.github.com/blog/2012/05/22/remote-textmate</id>
    <content type="html"><![CDATA[<p>textmate用起来很方便，在连上ssh时，自然也希望能够使用textmate，方法很多，列举几个：</p>

<h3>sftp客户端</h3>

<p>使用支持sftp的客户端，比如Cyberduck，连上ssh之后，配置文本编辑器为textmate，自然就可以直接编辑了，这种方法的好处简单且比较稳定，但是不适合编辑一个目录。</p>

<h3>sshfs文件系统</h3>

<p>将ssh映射为本地文件系统，可以用<a href="http://code.google.com/p/macfuse/">macfuse</a>，这种方法可能存在一定的稳定性问题，但允许编辑整个目录。</p>

<h3>textmate插件</h3>

<p>比如<a href="http://david.olrik.dk/projects/textmate-remote-sync-bundle/">这个</a>插件，当然只能对textmate有效。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails在VPS的部署]]></title>
    <link href="http://born729.github.com/blog/2012/04/28/rails-host-vps/"/>
    <updated>2012-04-28T20:26:00+08:00</updated>
    <id>http://born729.github.com/blog/2012/04/28/rails-host-vps</id>
    <content type="html"><![CDATA[<p>这是我们在VPS的部署方案。</p>

<h3>需求</h3>

<ul>
<li>VPS安装Ubuntu 11.04</li>
<li>RVM安装ruby和rails</li>
<li>Nginx和Passenger模块</li>
<li>PostgreSQL</li>
</ul>


<h3>VPS</h3>

<ul>
<li>我们使用Ubuntu11.04，设置好ssh</li>
</ul>


<h3>Ruby和Rails</h3>

<p>ruby要用1.9.3以上版本，因为1.9.3版本解决了一个性能问题，Rails用3.1以上版本，因为在之前的版本会有assets方面的兼容性问题。</p>

<h3>Nginx</h3>

<p><code>
gem install passenger
sudo apt-get install libcurl4-openssl-dev
rvmsudo passenger-install-nginx-module
</code></p>

<p>安装nginx启动脚本
<code>
wget http://www.smashingmagazine.com/files/nginx
sudo mv nginx /etc/init.d/nginx
sudo chmod +x /etc/init.d/nginx
sudo /usr/sbin/update-rc.d -f nginx defaults
</code></p>

<h3>PostgreSQL</h3>

<p>我们偏爱PostgreSQL，除了PostgreSQL成熟以外，还因为PostgreSQL和Sqlite比较接近的SQL语句，这样可以在两者间随意切换。
<code>
sudo apt-get install postgresql libpq-dev
</code></p>
]]></content>
  </entry>
  
</feed>
