<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: web | Born729]]></title>
  <link href="http://born729.github.com/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://born729.github.com/"/>
  <updated>2013-07-08T22:32:30+08:00</updated>
  <id>http://born729.github.com/</id>
  <author>
    <name><![CDATA[born729]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Meteor]]></title>
    <link href="http://born729.github.com/blog/2012/12/01/meteor/"/>
    <updated>2012-12-01T00:00:00+08:00</updated>
    <id>http://born729.github.com/blog/2012/12/01/meteor</id>
    <content type="html"><![CDATA[<p>Meteor，很新的一个Web开发框架，代表了下一代的Web开发框架的方向。</p>

<h3>架构</h3>

<h3>DOM处理</h3>

<p>Meteor下，DOM是靠JS render出来的，因此DOM始终是处于动态变化过程中的，这给很多DOM处理带来的额外的复杂性，比如需要初始化一些JS控件，就不能只在Meteor.startup中做，而应该在Meteor的template render后来做，比如：</p>

<p>```
Template.header.rendered = ->
  $('[data-role="dropdown"]').each -></p>

<pre><code>$(this).Dropdown()
</code></pre>

<p><code>
这样的话可以解决DOM的问题，但是紧接的问题就是如何防止因为多次回调导致一些事件被重复bind，jquery的事件是串接bind的，可以这样解决：
</code>
selector.unbind("click");
selector.on("click",...);
```</p>
]]></content>
  </entry>
  
</feed>
