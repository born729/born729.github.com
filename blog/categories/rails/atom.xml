<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | Born729]]></title>
  <link href="http://born729.github.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://born729.github.com/"/>
  <updated>2013-06-08T08:10:08+08:00</updated>
  <id>http://born729.github.com/</id>
  <author>
    <name><![CDATA[born729]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cocoa debug]]></title>
    <link href="http://born729.github.com/blog/2012/06/24/cocoa-gdb/"/>
    <updated>2012-06-24T00:00:00+08:00</updated>
    <id>http://born729.github.com/blog/2012/06/24/cocoa-gdb</id>
    <content type="html"><![CDATA[<h3>F-Script 注入</h3>

<p>事先将FScript.framework拷贝到/Library/Frameworks，然后使用gdb</p>

<p><code>
attach xxx
p (char)[[NSBundle bundleWithPath:@"/Library/Frameworks/FScript.framework"] load]
p (void)[FScriptMenuItem insertInMainMenu]
continue
</code></p>

<h3>F-Script console</h3>

<p><code>
keyWindow := NSApplication sharedApplication keyWindow.
</code></p>

<p>然后就可以做很多事情了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails向导]]></title>
    <link href="http://born729.github.com/blog/2012/05/27/rails-bootup/"/>
    <updated>2012-05-27T00:00:00+08:00</updated>
    <id>http://born729.github.com/blog/2012/05/27/rails-bootup</id>
    <content type="html"><![CDATA[<h3>RVM</h3>

<p>ruby的包管理器叫做gem，有些类似Linux的apt-get，leopard下已经预装gem，不过版本号实在不敢恭维:1.0.1，一个让人不太信任的数字，所以第一步就是刷新gem，不过对于系统已经安装的ruby和gem，替换不太好，幸好有rvm这个极好的工具，可以让你在个人的目录下管理ruby和gems。安装的方法就是下面的一条bash命令。</p>

<p><code>
bash &lt; &lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
</code></p>

<p>上面是安装了rvm到你的个人目录下，要使用rvm，还需要设置bash的初始化文件，同样的，一条命令：</p>

<p><code>
echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; . "$HOME/.rvm/scripts/rvm" # Load RVM function' &gt;&gt; ~/.bash_profile
</code></p>

<p>别忘了重新登录，以生效上面的profile。</p>

<h3>Ruby和Rails</h3>

<p>有了rvm，可以很方便的安装ruby了，如下：</p>

<p><code>
rvm install 1.9.3
socksify_ruby localhost 8888 `which gem` install rails
</code></p>

<p>理论上直接 gem install rails就可以了，不过因为一个你能懂的原因，我发现先装好socksify_ruby这个gem要好很多.</p>

<p>大部分书上介绍rails的第一条命令是：
<code>
rails new project
</code></p>

<h3>集成Capistrano</h3>

<p>Capistrano是很好的部署方法，如果需要自己部署的话，建议使用Capistrano，首先要生成Capistrano的配置文件：</p>

<p><code>
capify .
</code>
生产的deploy.rb，我们要做一些配置.</p>

<h3>application.rb</h3>

<p>这个文件中，有一些全局的应用程序设置，很多情况下需要修改的是时区，默认为UTC
<code>
config.time_zone = 'Beijing'
</code></p>

<h3>database.yml</h3>

<p>配置数据库，大部分情况下，我们喜欢postgresql，所以：
<code>
production:
  adapter: postgresql
  encoding: unicode
  database: name
  pool: 5
  username: user
  password: pass
</code>
上面是设置的生产环境，开发环境我们有时会直接使用sqlite，sqlite和postgresql的兼容性很好，当然有时也会直接使用postgresql，那么就同时需要修改配置文件中的development段落的相关设置。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails cheat sheet]]></title>
    <link href="http://born729.github.com/blog/2012/01/07/rails-on-osx/"/>
    <updated>2012-01-07T00:00:00+08:00</updated>
    <id>http://born729.github.com/blog/2012/01/07/rails-on-osx</id>
    <content type="html"><![CDATA[<h4>执行sql update语句</h4>

<p><code>
ActiveRecord::Base.connection.execute("update ...")
</code></p>
]]></content>
  </entry>
  
</feed>
